# -*- coding: utf-8 -*-
"""dashboardproyectofinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LNWvCUnEcY0DiPn2GFklvbeipP4PiC6O
"""

import pandas as pd
import plotly.express as px
from dash import Dash, dcc, html, Input, Output

app = Dash(__name__)

df1 = pd.read_excel('C:\Users\valentina\OneDrive\Documentos\GitHub\Tamurr_proyecto\dataframelim.xslx')
df2 = pd.read_excel('C:\Users\valentina\OneDrive\Documentos\GitHub\Tamurr_proyecto\compaprecios.xslx')


empresas = df2['Provedor'].unique()
colores_empresas = px.colors.qualitative.Set1[:len(empresas)]
color_map = dict(zip(empresas, colores_empresas))

app.layout = html.Div([
    html.H1("Costos de Productos por Empresa y Categoría"),
    dcc.Dropdown(
        id='subcategoria-dropdown',
        options=[{'label': subcategoria, 'value': subcategoria} for subcategoria in df1['Subcategoria'].unique()],
        value=df1['Subcategoria'].unique()[0]
    ),
    dcc.Graph(id='costo-por-empresa-y-categoria'),

    html.H1("Gráfico de Dispersión: Precio de Venta vs. Utilidad Bruta $"),
    dcc.Dropdown(
        id='subcategoria-scatter-dropdown',
        options=[{'label': subcategoria, 'value': subcategoria} for subcategoria in df2['Subcategoria'].unique()],
        value=df2['Subcategoria'].unique()[0]
    ),
    dcc.Graph(id='scatter-precio-venta-vs-utilidad'),

    html.H1("Conteo de Subproductos por Empresa"),
    dcc.Dropdown(
        id='subcategoria-conteo-dropdown',
        options=[{'label': subcategoria, 'value': subcategoria} for subcategoria in df1['Subcategoria'].unique()],
        value=df1['Subcategoria'].unique()[0]
    ),
    dcc.Graph(id='conteo-por-empresa')
])


@app.callback(
    Output('costo-por-empresa-y-categoria', 'figure'),
    [Input('subcategoria-dropdown', 'value')]
)
def update_graph(selected_subcategoria):
    df_filtrado = df1[df1['Subcategoria'] == selected_subcategoria]

    fig = px.box(df_filtrado, x='Empresa', y='Precio',
                 labels={'Precio': 'Costo'}, title=f'Costos de Productos por Empresa y Categoría ({selected_subcategoria})')

    return fig


@app.callback(
    Output('scatter-precio-venta-vs-utilidad', 'figure'),
    [Input('subcategoria-scatter-dropdown', 'value')]
)
def update_scatter(selected_subcategoria):
    df_filtrado = df2[df2['Subcategoria'] == selected_subcategoria]

    fig = px.scatter(df_filtrado, x='Precio de venta', y='Utilidad Bruta $',
                     color='Provedor',
                     color_discrete_map=color_map,
                     labels={'Precio de venta': 'Precio de Venta', 'Utilidad Bruta $': 'Utilidad Bruta $'},
                     title=f'Gráfico de Dispersión: Precio de Venta vs. Utilidad Bruta ({selected_subcategoria})')

    return fig


@app.callback(
    Output('conteo-por-empresa', 'figure'),
    [Input('subcategoria-conteo-dropdown', 'value')]
)
def update_conteo(selected_subcategoria):
    df_filtrado = df1[df1['Subcategoria'] == selected_subcategoria]
    df_conteo = df_filtrado.groupby('Empresa').size().reset_index(name='Conteo')

    fig = px.bar(df_conteo, x='Empresa', y='Conteo',
                 labels={'Conteo': 'Cantidad'}, title=f'Conteo de Subproductos por Empresa ({selected_subcategoria})')

    return fig

if __name__ == '__main__':
    app.run_server(debug=True)